/**
 * generated by Xtext 2.15.0
 */
package org.xtext.comp.wh.wh.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.comp.wh.wh.Commands;
import org.xtext.comp.wh.wh.Expr;
import org.xtext.comp.wh.wh.If;
import org.xtext.comp.wh.wh.WhPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>If</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.comp.wh.wh.impl.IfImpl#getCond <em>Cond</em>}</li>
 *   <li>{@link org.xtext.comp.wh.wh.impl.IfImpl#getIf_commands <em>If commands</em>}</li>
 *   <li>{@link org.xtext.comp.wh.wh.impl.IfImpl#getElse_commands <em>Else commands</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IfImpl extends MinimalEObjectImpl.Container implements If
{
  /**
   * The cached value of the '{@link #getCond() <em>Cond</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCond()
   * @generated
   * @ordered
   */
  protected Expr cond;

  /**
   * The cached value of the '{@link #getIf_commands() <em>If commands</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIf_commands()
   * @generated
   * @ordered
   */
  protected Commands if_commands;

  /**
   * The cached value of the '{@link #getElse_commands() <em>Else commands</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElse_commands()
   * @generated
   * @ordered
   */
  protected Commands else_commands;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WhPackage.Literals.IF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expr getCond()
  {
    return cond;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCond(Expr newCond, NotificationChain msgs)
  {
    Expr oldCond = cond;
    cond = newCond;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WhPackage.IF__COND, oldCond, newCond);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCond(Expr newCond)
  {
    if (newCond != cond)
    {
      NotificationChain msgs = null;
      if (cond != null)
        msgs = ((InternalEObject)cond).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WhPackage.IF__COND, null, msgs);
      if (newCond != null)
        msgs = ((InternalEObject)newCond).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WhPackage.IF__COND, null, msgs);
      msgs = basicSetCond(newCond, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.IF__COND, newCond, newCond));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Commands getIf_commands()
  {
    return if_commands;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIf_commands(Commands newIf_commands, NotificationChain msgs)
  {
    Commands oldIf_commands = if_commands;
    if_commands = newIf_commands;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WhPackage.IF__IF_COMMANDS, oldIf_commands, newIf_commands);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIf_commands(Commands newIf_commands)
  {
    if (newIf_commands != if_commands)
    {
      NotificationChain msgs = null;
      if (if_commands != null)
        msgs = ((InternalEObject)if_commands).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WhPackage.IF__IF_COMMANDS, null, msgs);
      if (newIf_commands != null)
        msgs = ((InternalEObject)newIf_commands).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WhPackage.IF__IF_COMMANDS, null, msgs);
      msgs = basicSetIf_commands(newIf_commands, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.IF__IF_COMMANDS, newIf_commands, newIf_commands));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Commands getElse_commands()
  {
    return else_commands;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElse_commands(Commands newElse_commands, NotificationChain msgs)
  {
    Commands oldElse_commands = else_commands;
    else_commands = newElse_commands;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WhPackage.IF__ELSE_COMMANDS, oldElse_commands, newElse_commands);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setElse_commands(Commands newElse_commands)
  {
    if (newElse_commands != else_commands)
    {
      NotificationChain msgs = null;
      if (else_commands != null)
        msgs = ((InternalEObject)else_commands).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WhPackage.IF__ELSE_COMMANDS, null, msgs);
      if (newElse_commands != null)
        msgs = ((InternalEObject)newElse_commands).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WhPackage.IF__ELSE_COMMANDS, null, msgs);
      msgs = basicSetElse_commands(newElse_commands, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.IF__ELSE_COMMANDS, newElse_commands, newElse_commands));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WhPackage.IF__COND:
        return basicSetCond(null, msgs);
      case WhPackage.IF__IF_COMMANDS:
        return basicSetIf_commands(null, msgs);
      case WhPackage.IF__ELSE_COMMANDS:
        return basicSetElse_commands(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WhPackage.IF__COND:
        return getCond();
      case WhPackage.IF__IF_COMMANDS:
        return getIf_commands();
      case WhPackage.IF__ELSE_COMMANDS:
        return getElse_commands();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WhPackage.IF__COND:
        setCond((Expr)newValue);
        return;
      case WhPackage.IF__IF_COMMANDS:
        setIf_commands((Commands)newValue);
        return;
      case WhPackage.IF__ELSE_COMMANDS:
        setElse_commands((Commands)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WhPackage.IF__COND:
        setCond((Expr)null);
        return;
      case WhPackage.IF__IF_COMMANDS:
        setIf_commands((Commands)null);
        return;
      case WhPackage.IF__ELSE_COMMANDS:
        setElse_commands((Commands)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WhPackage.IF__COND:
        return cond != null;
      case WhPackage.IF__IF_COMMANDS:
        return if_commands != null;
      case WhPackage.IF__ELSE_COMMANDS:
        return else_commands != null;
    }
    return super.eIsSet(featureID);
  }

} //IfImpl
