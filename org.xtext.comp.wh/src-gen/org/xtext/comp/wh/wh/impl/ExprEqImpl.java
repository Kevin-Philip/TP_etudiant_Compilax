/**
 * generated by Xtext 2.15.0
 */
package org.xtext.comp.wh.wh.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.comp.wh.wh.ExprEq;
import org.xtext.comp.wh.wh.ExprSimple;
import org.xtext.comp.wh.wh.LExpr;
import org.xtext.comp.wh.wh.WhPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expr Eq</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.comp.wh.wh.impl.ExprEqImpl#getE_left <em>Eleft</em>}</li>
 *   <li>{@link org.xtext.comp.wh.wh.impl.ExprEqImpl#getE_right <em>Eright</em>}</li>
 *   <li>{@link org.xtext.comp.wh.wh.impl.ExprEqImpl#getSym <em>Sym</em>}</li>
 *   <li>{@link org.xtext.comp.wh.wh.impl.ExprEqImpl#getE <em>E</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExprEqImpl extends MinimalEObjectImpl.Container implements ExprEq
{
  /**
   * The cached value of the '{@link #getE_left() <em>Eleft</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getE_left()
   * @generated
   * @ordered
   */
  protected ExprSimple e_left;

  /**
   * The cached value of the '{@link #getE_right() <em>Eright</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getE_right()
   * @generated
   * @ordered
   */
  protected ExprSimple e_right;

  /**
   * The default value of the '{@link #getSym() <em>Sym</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSym()
   * @generated
   * @ordered
   */
  protected static final String SYM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSym() <em>Sym</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSym()
   * @generated
   * @ordered
   */
  protected String sym = SYM_EDEFAULT;

  /**
   * The cached value of the '{@link #getE() <em>E</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getE()
   * @generated
   * @ordered
   */
  protected LExpr e;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExprEqImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return WhPackage.Literals.EXPR_EQ;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExprSimple getE_left()
  {
    return e_left;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetE_left(ExprSimple newE_left, NotificationChain msgs)
  {
    ExprSimple oldE_left = e_left;
    e_left = newE_left;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WhPackage.EXPR_EQ__ELEFT, oldE_left, newE_left);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setE_left(ExprSimple newE_left)
  {
    if (newE_left != e_left)
    {
      NotificationChain msgs = null;
      if (e_left != null)
        msgs = ((InternalEObject)e_left).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WhPackage.EXPR_EQ__ELEFT, null, msgs);
      if (newE_left != null)
        msgs = ((InternalEObject)newE_left).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WhPackage.EXPR_EQ__ELEFT, null, msgs);
      msgs = basicSetE_left(newE_left, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.EXPR_EQ__ELEFT, newE_left, newE_left));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExprSimple getE_right()
  {
    return e_right;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetE_right(ExprSimple newE_right, NotificationChain msgs)
  {
    ExprSimple oldE_right = e_right;
    e_right = newE_right;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WhPackage.EXPR_EQ__ERIGHT, oldE_right, newE_right);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setE_right(ExprSimple newE_right)
  {
    if (newE_right != e_right)
    {
      NotificationChain msgs = null;
      if (e_right != null)
        msgs = ((InternalEObject)e_right).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WhPackage.EXPR_EQ__ERIGHT, null, msgs);
      if (newE_right != null)
        msgs = ((InternalEObject)newE_right).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WhPackage.EXPR_EQ__ERIGHT, null, msgs);
      msgs = basicSetE_right(newE_right, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.EXPR_EQ__ERIGHT, newE_right, newE_right));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSym()
  {
    return sym;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSym(String newSym)
  {
    String oldSym = sym;
    sym = newSym;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.EXPR_EQ__SYM, oldSym, sym));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LExpr getE()
  {
    return e;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetE(LExpr newE, NotificationChain msgs)
  {
    LExpr oldE = e;
    e = newE;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WhPackage.EXPR_EQ__E, oldE, newE);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setE(LExpr newE)
  {
    if (newE != e)
    {
      NotificationChain msgs = null;
      if (e != null)
        msgs = ((InternalEObject)e).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - WhPackage.EXPR_EQ__E, null, msgs);
      if (newE != null)
        msgs = ((InternalEObject)newE).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - WhPackage.EXPR_EQ__E, null, msgs);
      msgs = basicSetE(newE, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, WhPackage.EXPR_EQ__E, newE, newE));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case WhPackage.EXPR_EQ__ELEFT:
        return basicSetE_left(null, msgs);
      case WhPackage.EXPR_EQ__ERIGHT:
        return basicSetE_right(null, msgs);
      case WhPackage.EXPR_EQ__E:
        return basicSetE(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case WhPackage.EXPR_EQ__ELEFT:
        return getE_left();
      case WhPackage.EXPR_EQ__ERIGHT:
        return getE_right();
      case WhPackage.EXPR_EQ__SYM:
        return getSym();
      case WhPackage.EXPR_EQ__E:
        return getE();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case WhPackage.EXPR_EQ__ELEFT:
        setE_left((ExprSimple)newValue);
        return;
      case WhPackage.EXPR_EQ__ERIGHT:
        setE_right((ExprSimple)newValue);
        return;
      case WhPackage.EXPR_EQ__SYM:
        setSym((String)newValue);
        return;
      case WhPackage.EXPR_EQ__E:
        setE((LExpr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case WhPackage.EXPR_EQ__ELEFT:
        setE_left((ExprSimple)null);
        return;
      case WhPackage.EXPR_EQ__ERIGHT:
        setE_right((ExprSimple)null);
        return;
      case WhPackage.EXPR_EQ__SYM:
        setSym(SYM_EDEFAULT);
        return;
      case WhPackage.EXPR_EQ__E:
        setE((LExpr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case WhPackage.EXPR_EQ__ELEFT:
        return e_left != null;
      case WhPackage.EXPR_EQ__ERIGHT:
        return e_right != null;
      case WhPackage.EXPR_EQ__SYM:
        return SYM_EDEFAULT == null ? sym != null : !SYM_EDEFAULT.equals(sym);
      case WhPackage.EXPR_EQ__E:
        return e != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (sym: ");
    result.append(sym);
    result.append(')');
    return result.toString();
  }

} //ExprEqImpl
