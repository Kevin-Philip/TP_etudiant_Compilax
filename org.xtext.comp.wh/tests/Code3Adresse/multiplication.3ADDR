Table des symboles :
nil : s0
Table des variables :
A : Var1
Q : Var3
B : Var2
R : Var4
function division: (input=2, output=2)
< READ, Var1, _, _>
< READ, Var2, _, _>
< AFF, Var3, s0, _>
< AFF, Var4, Var1, _>
< WHILE
	condition
	[< CALL, _, f1, _>]
	body
	[< CONS, TempVar1, s0, Var3>, < AFF, Var3, TempVar1, _>, < CALL, _, f4, _>, < AFF, Var4, TempVar2, _>]
>
< WRITE, Var4, _, _>
< WRITE, Var3, _, _>

Table des variables :
A : Var1
B : Var2
C : Var3
function superieur: (input=2, output=1)
< READ, Var1, _, _>
< READ, Var2, _, _>
< IF
	condition
	[< EQ, TempVar0, Var1, Var2>]
	then
	[< AFF, Var3, s0, _>]
	else
	[< CONS, TempVar1, s0, s0>, < AFF, Var3, TempVar1, _>, < FOR
	condition
	[]
	body
	[< TL, TempVar2, Var2, _>, < AFF, Var2, TempVar2, _>, < IF
	condition
	[< EQ, TempVar3, Var2, Var1>]
	then
	[< AFF, Var3, s0, _>]
>]
>]
>
< WRITE, Var3, _, _>

Table des variables :
A : Var1
B : Var2
C : Var3
function inferieur: (input=2, output=1)
< READ, Var1, _, _>
< READ, Var2, _, _>
< CALL, _, f1, _>
< NOT, TempVar0, TempVar1, _>
< AFF, Var3, TempVar0, _>
< WRITE, Var3, _, _>

Table des variables :
A : Var1
B : Var2
C : Var3
function superieurOuEgal: (input=2, output=1)
< READ, Var1, _, _>
< READ, Var2, _, _>
< CONS, TempVar0, s0, s0>
< AFF, Var3, TempVar0, _>
< FOR
	condition
	[]
	body
	[< TL, TempVar1, Var2, _>, < AFF, Var2, TempVar1, _>, < IF
	condition
	[< EQ, TempVar2, Var2, Var1>]
	then
	[< AFF, Var3, s0, _>]
>]
>
< WRITE, Var3, _, _>

Table des variables :
A : Var1
B : Var2
R : Var3
function main: (input=2, output=1)
< READ, Var1, _, _>
< READ, Var2, _, _>
< CALL, _, f5, _>
< AFF, Var3, TempVar0, _>
< WRITE, Var3, _, _>

Table des variables :
A : Var1
B : Var2
R : Var3
function multiplication: (input=2, output=1)
< READ, Var1, _, _>
< READ, Var2, _, _>
< AFF, Var3, s0, _>
< FOR
	condition
	[]
	body
	[< CALL, _, f3, _>, < AFF, Var3, TempVar0, _>]
>
< WRITE, Var3, _, _>

Table des variables :
A : Var1
B : Var2
function soustraction: (input=2, output=1)
< READ, Var1, _, _>
< READ, Var2, _, _>
< FOR
	condition
	[]
	body
	[< TL, TempVar0, Var1, _>, < AFF, Var1, TempVar0, _>]
>
< WRITE, Var1, _, _>

Table des variables :
A : Var1
B : Var2
function addition: (input=2, output=1)
< READ, Var1, _, _>
< READ, Var2, _, _>
< FOR
	condition
	[]
	body
	[< CONS, TempVar0, s0, Var1>, < AFF, Var1, TempVar0, _>]
>
< WRITE, Var1, _, _>

