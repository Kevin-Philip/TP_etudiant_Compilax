grammar org.xtext.comp.wh.Wh with org.eclipse.xtext.common.Terminals

generate wh "http://www.xtext.org/comp/wh/Wh"

/*Model:
	program += Program;	
	
Program:
	(Function)+;

Function:
	'function' SYMBOL ':' Definition;
	
Definition:
	'read' Input '%' Commands '%' 'write' Output;
	
Input:
	VARIABLE (',' VARIABLE)*;
	
Output:
	VARIABLE (',' VARIABLE)*;
		
Commands :
	Command (';' Command)*;
	
Command:
	'nop' |
	Vars ':=' Exprs |
	'while' CommandBody |
	'for' CommandBody |
	'if' Expr 'then' Commands ('else' Commands)? 'fi' |
	'foreach' Expr 'in' CommandBody;

CommandBody :
	Expr 'do' Commands 'od';
	
Vars:
	VARIABLE (',' VARIABLE)*;
	
Exprs:
	Expr (',' Expr)*;
	
Expr:
	ExprAnd;
	
LExpr:
	(Expr)+;
	
ExprSimple:
	'nil' | VARIABLE | SYMBOL | 
	'(' 'cons' LExpr ')' | '(' 'list' LExpr ')' |
	'(' 'hd' Expr ')' | '(' 'tl' Expr ')' |
	(=> '(' SYMBOL LExpr ')');
	
ExprAnd:
	ExprOr ('and' ExprOr)*;
	
ExprOr:
	ExprNot ('or' ExprNot)*;
	
ExprNot:
	'not'? ExprEq;
	
ExprEq:
	ExprSimple ('=?' ExprSimple)? | '(' Expr ')';
	
terminal SYMBOL: ('a'..'z') ('0'..'9'|'a'..'z'|'A'..'Z')* ((('-'|'+'|'.'|'/'|'_'|'&') | '->') ('0'..'9'|'a'..'z'|'A'..'Z')+)* ('?'|'!')?;
terminal VARIABLE : ('A'..'Z') ('0'..'9'|'a'..'z'|'A'..'Z')* ((('-'|'+'|'.'|'/'|'_'|'&') | '->') ('0'..'9'|'a'..'z'|'A'..'Z')+)* ('?'|'!')?;

*/

Model:
	text = Program;
	
	
Program:
	(functions+=Function)+
;

Function:
	'function' fname=SYMBOL ':' definition=Definition
;

Definition:
	'read'  inputs=Input
	'%' commands=Commands
	'%' 'write' outputs=Output
;

Input:
	params+=VARIABLE (',' params+=VARIABLE)*
;

Output:
	r_values+=VARIABLE (',' r_values+=VARIABLE)*
;

Commands:
	command+=Command (';' command+=Command)*
;

Command:
	( command=Nop | command=Assign | command=While | command=For | command=If | command=Foreach )
;

Nop:
	nop='nop'
;

Assign:
	(vars=Vars ':=' exprs=Exprs)
;

While:
	('while'  cond=Expr  'do'  commands=Commands  'od')
;

For:
	('for'  cond=Expr  'do'  commands=Commands  'od')
;

If:
	('if'  cond=Expr  'then'  if_commands=Commands  ('else'  else_commands=Commands )? 'fi')
;

Foreach:
	('foreach'  cond=Expr  'in'  ens=Expr  'do'  commands=Commands  'od')
;

Vars:
	variables+=VARIABLE (',' variables+=VARIABLE)*
;
Exprs:
	expr+=Expr (',' expr+=Expr)*
;

Expr:
	expr_and=ExprAnd
;

ExprSimple:
	(nil='nil' | variable=VARIABLE | sym=SYMBOL | '(' 'cons' cons_exp=LExpr ')' | '(' 'list' list_exp=LExpr ')' | '(' 'hd'  hd_expr=Expr ')' | '(' 'tl'  tl_expr=Expr ')' 
	)
;

ExprAnd:
	expr_or+=ExprOr ( 'and'  expr_or+=ExprOr)*
;

ExprOr:
	expr_not+=ExprNot ( 'or'  expr_not+=ExprNot)*
;

ExprNot:
	(hasNot='not'?  expr_eq=ExprEq)
;

ExprEq:
	expr_left=ExprSimple ('=?' expr_right=ExprSimple)? | (=> '(' sym=SYMBOL lexpr=LExpr ')') | '(' expr=Expr ')'
;

LExpr:
	( expr+=Expr)+
;


terminal SYMBOL: ('a'..'z') ('0'..'9'|'a'..'z'|'A'..'Z')* ((('-'|'+'|'.'|'/'|'_'|'&') | '->') ('0'..'9'|'a'..'z'|'A'..'Z')+)* ('?'|'!')?;
terminal VARIABLE : ('A'..'Z') ('0'..'9'|'a'..'z'|'A'..'Z')* ((('-'|'+'|'.'|'/'|'_'|'&') | '->') ('0'..'9'|'a'..'z'|'A'..'Z')+)* ('?'|'!')?;
terminal CR: '\r';