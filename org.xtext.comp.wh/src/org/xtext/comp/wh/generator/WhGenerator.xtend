/*
 * generated by Xtext 2.15.0
 */
package org.xtext.comp.wh.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.comp.wh.wh.Commands
import org.xtext.comp.wh.wh.Definition
import org.xtext.comp.wh.wh.Function
import org.xtext.comp.wh.wh.Program
import org.xtext.comp.wh.wh.Command

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class WhGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for(e : resource.allContents.toIterable.filter(Program)) {
			fsa.generateFile("output.wh", e.compile())
		}
	}
	
	def compile(Program p) '''
	«FOR f : p.functions»
	«f.compile()»
	«ENDFOR»
	'''
	
	def compile(Function f) '''
	function «f.fname»:
	«f.definition.compile()»
	'''
	
	def compile(Definition d)'''
	read «FOR param : d.inputs.params SEPARATOR ", "»«param»«ENDFOR»
	%
	«d.commands.compile()»
	%
	write «FOR r_value : d.outputs.r_values SEPARATOR ", "»«r_value»«ENDFOR»
	'''
	
	
	def compile(Commands c)'''
	«FOR command: c.command»
	«command.compile()»;
	«ENDFOR»
	'''
	
	def compile(Command c)'''
	
	'''
	

}
