/**
 * generated by Xtext 2.15.0
 */
package org.xtext.whileLanguage;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.whileLanguage.WhileLanguageFactory
 * @model kind="package"
 * @generated
 */
public interface WhileLanguagePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "whileLanguage";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/WhileLanguage";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "whileLanguage";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  WhileLanguagePackage eINSTANCE = org.xtext.whileLanguage.impl.WhileLanguagePackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.ModelImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Text</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__TEXT = 0;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.ProgramImpl <em>Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.ProgramImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getProgram()
   * @generated
   */
  int PROGRAM = 1;

  /**
   * The feature id for the '<em><b>F</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__F = 0;

  /**
   * The feature id for the '<em><b>P</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__P = 1;

  /**
   * The number of structural features of the '<em>Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.FunctionImpl <em>Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.FunctionImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getFunction()
   * @generated
   */
  int FUNCTION = 2;

  /**
   * The feature id for the '<em><b>D</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION__D = 0;

  /**
   * The number of structural features of the '<em>Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.DefinitionImpl <em>Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.DefinitionImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getDefinition()
   * @generated
   */
  int DEFINITION = 3;

  /**
   * The feature id for the '<em><b>I</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__I = 0;

  /**
   * The feature id for the '<em><b>C</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__C = 1;

  /**
   * The feature id for the '<em><b>O</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__O = 2;

  /**
   * The number of structural features of the '<em>Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.InputImpl <em>Input</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.InputImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getInput()
   * @generated
   */
  int INPUT = 4;

  /**
   * The feature id for the '<em><b>V</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INPUT__V = 0;

  /**
   * The feature id for the '<em><b>V2</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INPUT__V2 = 1;

  /**
   * The number of structural features of the '<em>Input</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INPUT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.OutputImpl <em>Output</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.OutputImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getOutput()
   * @generated
   */
  int OUTPUT = 5;

  /**
   * The feature id for the '<em><b>V</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT__V = 0;

  /**
   * The feature id for the '<em><b>V2</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT__V2 = 1;

  /**
   * The number of structural features of the '<em>Output</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.CommandsImpl <em>Commands</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.CommandsImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getCommands()
   * @generated
   */
  int COMMANDS = 6;

  /**
   * The feature id for the '<em><b>C</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMANDS__C = 0;

  /**
   * The feature id for the '<em><b>C2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMANDS__C2 = 1;

  /**
   * The number of structural features of the '<em>Commands</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMANDS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.CommandImpl <em>Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.CommandImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getCommand()
   * @generated
   */
  int COMMAND = 7;

  /**
   * The feature id for the '<em><b>Nop</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND__NOP = 0;

  /**
   * The feature id for the '<em><b>Assign</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND__ASSIGN = 1;

  /**
   * The feature id for the '<em><b>While</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND__WHILE = 2;

  /**
   * The feature id for the '<em><b>For</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND__FOR = 3;

  /**
   * The feature id for the '<em><b>If</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND__IF = 4;

  /**
   * The feature id for the '<em><b>Foreach</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND__FOREACH = 5;

  /**
   * The number of structural features of the '<em>Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.AssignImpl <em>Assign</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.AssignImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getAssign()
   * @generated
   */
  int ASSIGN = 8;

  /**
   * The feature id for the '<em><b>V</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGN__V = 0;

  /**
   * The feature id for the '<em><b>E</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGN__E = 1;

  /**
   * The number of structural features of the '<em>Assign</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGN_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.WhileImpl <em>While</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.WhileImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getWhile()
   * @generated
   */
  int WHILE = 9;

  /**
   * The feature id for the '<em><b>E</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE__E = 0;

  /**
   * The feature id for the '<em><b>C</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE__C = 1;

  /**
   * The number of structural features of the '<em>While</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.ForImpl <em>For</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.ForImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getFor()
   * @generated
   */
  int FOR = 10;

  /**
   * The feature id for the '<em><b>E</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR__E = 0;

  /**
   * The feature id for the '<em><b>C</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR__C = 1;

  /**
   * The number of structural features of the '<em>For</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.IfImpl <em>If</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.IfImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getIf()
   * @generated
   */
  int IF = 11;

  /**
   * The feature id for the '<em><b>E</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF__E = 0;

  /**
   * The feature id for the '<em><b>C</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF__C = 1;

  /**
   * The feature id for the '<em><b>C2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF__C2 = 2;

  /**
   * The number of structural features of the '<em>If</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.ForeachImpl <em>Foreach</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.ForeachImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getForeach()
   * @generated
   */
  int FOREACH = 12;

  /**
   * The feature id for the '<em><b>E</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREACH__E = 0;

  /**
   * The feature id for the '<em><b>E2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREACH__E2 = 1;

  /**
   * The feature id for the '<em><b>C</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREACH__C = 2;

  /**
   * The number of structural features of the '<em>Foreach</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREACH_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.VarsImpl <em>Vars</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.VarsImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getVars()
   * @generated
   */
  int VARS = 13;

  /**
   * The feature id for the '<em><b>V</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARS__V = 0;

  /**
   * The feature id for the '<em><b>V2</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARS__V2 = 1;

  /**
   * The number of structural features of the '<em>Vars</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.ExprsImpl <em>Exprs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.ExprsImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExprs()
   * @generated
   */
  int EXPRS = 14;

  /**
   * The feature id for the '<em><b>E</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRS__E = 0;

  /**
   * The feature id for the '<em><b>E2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRS__E2 = 1;

  /**
   * The number of structural features of the '<em>Exprs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.ExprImpl <em>Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.ExprImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExpr()
   * @generated
   */
  int EXPR = 15;

  /**
   * The feature id for the '<em><b>Ea</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__EA = 0;

  /**
   * The number of structural features of the '<em>Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.ExprSimpleImpl <em>Expr Simple</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.ExprSimpleImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExprSimple()
   * @generated
   */
  int EXPR_SIMPLE = 16;

  /**
   * The feature id for the '<em><b>Nil</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_SIMPLE__NIL = 0;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_SIMPLE__VAR = 1;

  /**
   * The feature id for the '<em><b>Sym</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_SIMPLE__SYM = 2;

  /**
   * The feature id for the '<em><b>E3</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_SIMPLE__E3 = 3;

  /**
   * The feature id for the '<em><b>E4</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_SIMPLE__E4 = 4;

  /**
   * The feature id for the '<em><b>E5</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_SIMPLE__E5 = 5;

  /**
   * The feature id for the '<em><b>E6</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_SIMPLE__E6 = 6;

  /**
   * The number of structural features of the '<em>Expr Simple</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_SIMPLE_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.ExprAndImpl <em>Expr And</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.ExprAndImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExprAnd()
   * @generated
   */
  int EXPR_AND = 17;

  /**
   * The feature id for the '<em><b>Eo</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_AND__EO = 0;

  /**
   * The feature id for the '<em><b>Eo2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_AND__EO2 = 1;

  /**
   * The number of structural features of the '<em>Expr And</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_AND_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.ExprOrImpl <em>Expr Or</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.ExprOrImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExprOr()
   * @generated
   */
  int EXPR_OR = 18;

  /**
   * The feature id for the '<em><b>En</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_OR__EN = 0;

  /**
   * The feature id for the '<em><b>En2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_OR__EN2 = 1;

  /**
   * The number of structural features of the '<em>Expr Or</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_OR_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.ExprNotImpl <em>Expr Not</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.ExprNotImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExprNot()
   * @generated
   */
  int EXPR_NOT = 19;

  /**
   * The feature id for the '<em><b>E</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_NOT__E = 0;

  /**
   * The feature id for the '<em><b>E2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_NOT__E2 = 1;

  /**
   * The number of structural features of the '<em>Expr Not</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_NOT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.ExprEqImpl <em>Expr Eq</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.ExprEqImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExprEq()
   * @generated
   */
  int EXPR_EQ = 20;

  /**
   * The feature id for the '<em><b>E</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_EQ__E = 0;

  /**
   * The feature id for the '<em><b>E2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_EQ__E2 = 1;

  /**
   * The number of structural features of the '<em>Expr Eq</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_EQ_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.whileLanguage.impl.LExprImpl <em>LExpr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.whileLanguage.impl.LExprImpl
   * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getLExpr()
   * @generated
   */
  int LEXPR = 21;

  /**
   * The feature id for the '<em><b>E</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEXPR__E = EXPR_EQ__E;

  /**
   * The feature id for the '<em><b>E2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEXPR__E2 = EXPR_EQ__E2;

  /**
   * The feature id for the '<em><b>E1</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEXPR__E1 = EXPR_EQ_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>LExpr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEXPR_FEATURE_COUNT = EXPR_EQ_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see org.xtext.whileLanguage.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Model#getText <em>Text</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Text</em>'.
   * @see org.xtext.whileLanguage.Model#getText()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Text();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.Program <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program</em>'.
   * @see org.xtext.whileLanguage.Program
   * @generated
   */
  EClass getProgram();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.whileLanguage.Program#getF <em>F</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>F</em>'.
   * @see org.xtext.whileLanguage.Program#getF()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_F();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Program#getP <em>P</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>P</em>'.
   * @see org.xtext.whileLanguage.Program#getP()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_P();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.Function <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function</em>'.
   * @see org.xtext.whileLanguage.Function
   * @generated
   */
  EClass getFunction();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Function#getD <em>D</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>D</em>'.
   * @see org.xtext.whileLanguage.Function#getD()
   * @see #getFunction()
   * @generated
   */
  EReference getFunction_D();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.Definition <em>Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Definition</em>'.
   * @see org.xtext.whileLanguage.Definition
   * @generated
   */
  EClass getDefinition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Definition#getI <em>I</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>I</em>'.
   * @see org.xtext.whileLanguage.Definition#getI()
   * @see #getDefinition()
   * @generated
   */
  EReference getDefinition_I();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Definition#getC <em>C</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>C</em>'.
   * @see org.xtext.whileLanguage.Definition#getC()
   * @see #getDefinition()
   * @generated
   */
  EReference getDefinition_C();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Definition#getO <em>O</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>O</em>'.
   * @see org.xtext.whileLanguage.Definition#getO()
   * @see #getDefinition()
   * @generated
   */
  EReference getDefinition_O();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.Input <em>Input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Input</em>'.
   * @see org.xtext.whileLanguage.Input
   * @generated
   */
  EClass getInput();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.whileLanguage.Input#getV <em>V</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>V</em>'.
   * @see org.xtext.whileLanguage.Input#getV()
   * @see #getInput()
   * @generated
   */
  EAttribute getInput_V();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.whileLanguage.Input#getV2 <em>V2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>V2</em>'.
   * @see org.xtext.whileLanguage.Input#getV2()
   * @see #getInput()
   * @generated
   */
  EAttribute getInput_V2();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.Output <em>Output</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Output</em>'.
   * @see org.xtext.whileLanguage.Output
   * @generated
   */
  EClass getOutput();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.whileLanguage.Output#getV <em>V</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>V</em>'.
   * @see org.xtext.whileLanguage.Output#getV()
   * @see #getOutput()
   * @generated
   */
  EAttribute getOutput_V();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.whileLanguage.Output#getV2 <em>V2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>V2</em>'.
   * @see org.xtext.whileLanguage.Output#getV2()
   * @see #getOutput()
   * @generated
   */
  EAttribute getOutput_V2();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.Commands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Commands</em>'.
   * @see org.xtext.whileLanguage.Commands
   * @generated
   */
  EClass getCommands();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.whileLanguage.Commands#getC <em>C</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>C</em>'.
   * @see org.xtext.whileLanguage.Commands#getC()
   * @see #getCommands()
   * @generated
   */
  EReference getCommands_C();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.whileLanguage.Commands#getC2 <em>C2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>C2</em>'.
   * @see org.xtext.whileLanguage.Commands#getC2()
   * @see #getCommands()
   * @generated
   */
  EReference getCommands_C2();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.Command <em>Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Command</em>'.
   * @see org.xtext.whileLanguage.Command
   * @generated
   */
  EClass getCommand();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.whileLanguage.Command#getNop <em>Nop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Nop</em>'.
   * @see org.xtext.whileLanguage.Command#getNop()
   * @see #getCommand()
   * @generated
   */
  EAttribute getCommand_Nop();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Command#getAssign <em>Assign</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Assign</em>'.
   * @see org.xtext.whileLanguage.Command#getAssign()
   * @see #getCommand()
   * @generated
   */
  EReference getCommand_Assign();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Command#getWhile <em>While</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>While</em>'.
   * @see org.xtext.whileLanguage.Command#getWhile()
   * @see #getCommand()
   * @generated
   */
  EReference getCommand_While();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Command#getFor <em>For</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>For</em>'.
   * @see org.xtext.whileLanguage.Command#getFor()
   * @see #getCommand()
   * @generated
   */
  EReference getCommand_For();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Command#getIf <em>If</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>If</em>'.
   * @see org.xtext.whileLanguage.Command#getIf()
   * @see #getCommand()
   * @generated
   */
  EReference getCommand_If();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Command#getForeach <em>Foreach</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Foreach</em>'.
   * @see org.xtext.whileLanguage.Command#getForeach()
   * @see #getCommand()
   * @generated
   */
  EReference getCommand_Foreach();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.Assign <em>Assign</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assign</em>'.
   * @see org.xtext.whileLanguage.Assign
   * @generated
   */
  EClass getAssign();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Assign#getV <em>V</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>V</em>'.
   * @see org.xtext.whileLanguage.Assign#getV()
   * @see #getAssign()
   * @generated
   */
  EReference getAssign_V();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Assign#getE <em>E</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E</em>'.
   * @see org.xtext.whileLanguage.Assign#getE()
   * @see #getAssign()
   * @generated
   */
  EReference getAssign_E();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.While <em>While</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>While</em>'.
   * @see org.xtext.whileLanguage.While
   * @generated
   */
  EClass getWhile();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.While#getE <em>E</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E</em>'.
   * @see org.xtext.whileLanguage.While#getE()
   * @see #getWhile()
   * @generated
   */
  EReference getWhile_E();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.While#getC <em>C</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>C</em>'.
   * @see org.xtext.whileLanguage.While#getC()
   * @see #getWhile()
   * @generated
   */
  EReference getWhile_C();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.For <em>For</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>For</em>'.
   * @see org.xtext.whileLanguage.For
   * @generated
   */
  EClass getFor();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.For#getE <em>E</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E</em>'.
   * @see org.xtext.whileLanguage.For#getE()
   * @see #getFor()
   * @generated
   */
  EReference getFor_E();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.For#getC <em>C</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>C</em>'.
   * @see org.xtext.whileLanguage.For#getC()
   * @see #getFor()
   * @generated
   */
  EReference getFor_C();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.If <em>If</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If</em>'.
   * @see org.xtext.whileLanguage.If
   * @generated
   */
  EClass getIf();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.If#getE <em>E</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E</em>'.
   * @see org.xtext.whileLanguage.If#getE()
   * @see #getIf()
   * @generated
   */
  EReference getIf_E();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.If#getC <em>C</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>C</em>'.
   * @see org.xtext.whileLanguage.If#getC()
   * @see #getIf()
   * @generated
   */
  EReference getIf_C();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.If#getC2 <em>C2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>C2</em>'.
   * @see org.xtext.whileLanguage.If#getC2()
   * @see #getIf()
   * @generated
   */
  EReference getIf_C2();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.Foreach <em>Foreach</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Foreach</em>'.
   * @see org.xtext.whileLanguage.Foreach
   * @generated
   */
  EClass getForeach();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Foreach#getE <em>E</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E</em>'.
   * @see org.xtext.whileLanguage.Foreach#getE()
   * @see #getForeach()
   * @generated
   */
  EReference getForeach_E();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Foreach#getE2 <em>E2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E2</em>'.
   * @see org.xtext.whileLanguage.Foreach#getE2()
   * @see #getForeach()
   * @generated
   */
  EReference getForeach_E2();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Foreach#getC <em>C</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>C</em>'.
   * @see org.xtext.whileLanguage.Foreach#getC()
   * @see #getForeach()
   * @generated
   */
  EReference getForeach_C();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.Vars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Vars</em>'.
   * @see org.xtext.whileLanguage.Vars
   * @generated
   */
  EClass getVars();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.whileLanguage.Vars#getV <em>V</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>V</em>'.
   * @see org.xtext.whileLanguage.Vars#getV()
   * @see #getVars()
   * @generated
   */
  EAttribute getVars_V();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.whileLanguage.Vars#getV2 <em>V2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>V2</em>'.
   * @see org.xtext.whileLanguage.Vars#getV2()
   * @see #getVars()
   * @generated
   */
  EAttribute getVars_V2();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.Exprs <em>Exprs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exprs</em>'.
   * @see org.xtext.whileLanguage.Exprs
   * @generated
   */
  EClass getExprs();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Exprs#getE <em>E</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E</em>'.
   * @see org.xtext.whileLanguage.Exprs#getE()
   * @see #getExprs()
   * @generated
   */
  EReference getExprs_E();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.whileLanguage.Exprs#getE2 <em>E2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>E2</em>'.
   * @see org.xtext.whileLanguage.Exprs#getE2()
   * @see #getExprs()
   * @generated
   */
  EReference getExprs_E2();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.Expr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr</em>'.
   * @see org.xtext.whileLanguage.Expr
   * @generated
   */
  EClass getExpr();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.Expr#getEa <em>Ea</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ea</em>'.
   * @see org.xtext.whileLanguage.Expr#getEa()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Ea();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.ExprSimple <em>Expr Simple</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr Simple</em>'.
   * @see org.xtext.whileLanguage.ExprSimple
   * @generated
   */
  EClass getExprSimple();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.whileLanguage.ExprSimple#getNil <em>Nil</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Nil</em>'.
   * @see org.xtext.whileLanguage.ExprSimple#getNil()
   * @see #getExprSimple()
   * @generated
   */
  EAttribute getExprSimple_Nil();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.whileLanguage.ExprSimple#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var</em>'.
   * @see org.xtext.whileLanguage.ExprSimple#getVar()
   * @see #getExprSimple()
   * @generated
   */
  EAttribute getExprSimple_Var();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.whileLanguage.ExprSimple#getSym <em>Sym</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sym</em>'.
   * @see org.xtext.whileLanguage.ExprSimple#getSym()
   * @see #getExprSimple()
   * @generated
   */
  EAttribute getExprSimple_Sym();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.ExprSimple#getE3 <em>E3</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E3</em>'.
   * @see org.xtext.whileLanguage.ExprSimple#getE3()
   * @see #getExprSimple()
   * @generated
   */
  EReference getExprSimple_E3();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.ExprSimple#getE4 <em>E4</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E4</em>'.
   * @see org.xtext.whileLanguage.ExprSimple#getE4()
   * @see #getExprSimple()
   * @generated
   */
  EReference getExprSimple_E4();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.ExprSimple#getE5 <em>E5</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E5</em>'.
   * @see org.xtext.whileLanguage.ExprSimple#getE5()
   * @see #getExprSimple()
   * @generated
   */
  EReference getExprSimple_E5();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.ExprSimple#getE6 <em>E6</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E6</em>'.
   * @see org.xtext.whileLanguage.ExprSimple#getE6()
   * @see #getExprSimple()
   * @generated
   */
  EReference getExprSimple_E6();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.ExprAnd <em>Expr And</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr And</em>'.
   * @see org.xtext.whileLanguage.ExprAnd
   * @generated
   */
  EClass getExprAnd();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.ExprAnd#getEo <em>Eo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Eo</em>'.
   * @see org.xtext.whileLanguage.ExprAnd#getEo()
   * @see #getExprAnd()
   * @generated
   */
  EReference getExprAnd_Eo();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.whileLanguage.ExprAnd#getEo2 <em>Eo2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Eo2</em>'.
   * @see org.xtext.whileLanguage.ExprAnd#getEo2()
   * @see #getExprAnd()
   * @generated
   */
  EReference getExprAnd_Eo2();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.ExprOr <em>Expr Or</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr Or</em>'.
   * @see org.xtext.whileLanguage.ExprOr
   * @generated
   */
  EClass getExprOr();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.ExprOr#getEn <em>En</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>En</em>'.
   * @see org.xtext.whileLanguage.ExprOr#getEn()
   * @see #getExprOr()
   * @generated
   */
  EReference getExprOr_En();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.whileLanguage.ExprOr#getEn2 <em>En2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>En2</em>'.
   * @see org.xtext.whileLanguage.ExprOr#getEn2()
   * @see #getExprOr()
   * @generated
   */
  EReference getExprOr_En2();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.ExprNot <em>Expr Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr Not</em>'.
   * @see org.xtext.whileLanguage.ExprNot
   * @generated
   */
  EClass getExprNot();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.ExprNot#getE <em>E</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E</em>'.
   * @see org.xtext.whileLanguage.ExprNot#getE()
   * @see #getExprNot()
   * @generated
   */
  EReference getExprNot_E();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.ExprNot#getE2 <em>E2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E2</em>'.
   * @see org.xtext.whileLanguage.ExprNot#getE2()
   * @see #getExprNot()
   * @generated
   */
  EReference getExprNot_E2();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.ExprEq <em>Expr Eq</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr Eq</em>'.
   * @see org.xtext.whileLanguage.ExprEq
   * @generated
   */
  EClass getExprEq();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.ExprEq#getE <em>E</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E</em>'.
   * @see org.xtext.whileLanguage.ExprEq#getE()
   * @see #getExprEq()
   * @generated
   */
  EReference getExprEq_E();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.whileLanguage.ExprEq#getE2 <em>E2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E2</em>'.
   * @see org.xtext.whileLanguage.ExprEq#getE2()
   * @see #getExprEq()
   * @generated
   */
  EReference getExprEq_E2();

  /**
   * Returns the meta object for class '{@link org.xtext.whileLanguage.LExpr <em>LExpr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>LExpr</em>'.
   * @see org.xtext.whileLanguage.LExpr
   * @generated
   */
  EClass getLExpr();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.whileLanguage.LExpr#getE1 <em>E1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>E1</em>'.
   * @see org.xtext.whileLanguage.LExpr#getE1()
   * @see #getLExpr()
   * @generated
   */
  EReference getLExpr_E1();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  WhileLanguageFactory getWhileLanguageFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.ModelImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Text</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__TEXT = eINSTANCE.getModel_Text();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.ProgramImpl <em>Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.ProgramImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getProgram()
     * @generated
     */
    EClass PROGRAM = eINSTANCE.getProgram();

    /**
     * The meta object literal for the '<em><b>F</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__F = eINSTANCE.getProgram_F();

    /**
     * The meta object literal for the '<em><b>P</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__P = eINSTANCE.getProgram_P();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.FunctionImpl <em>Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.FunctionImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getFunction()
     * @generated
     */
    EClass FUNCTION = eINSTANCE.getFunction();

    /**
     * The meta object literal for the '<em><b>D</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION__D = eINSTANCE.getFunction_D();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.DefinitionImpl <em>Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.DefinitionImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getDefinition()
     * @generated
     */
    EClass DEFINITION = eINSTANCE.getDefinition();

    /**
     * The meta object literal for the '<em><b>I</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINITION__I = eINSTANCE.getDefinition_I();

    /**
     * The meta object literal for the '<em><b>C</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINITION__C = eINSTANCE.getDefinition_C();

    /**
     * The meta object literal for the '<em><b>O</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINITION__O = eINSTANCE.getDefinition_O();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.InputImpl <em>Input</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.InputImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getInput()
     * @generated
     */
    EClass INPUT = eINSTANCE.getInput();

    /**
     * The meta object literal for the '<em><b>V</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INPUT__V = eINSTANCE.getInput_V();

    /**
     * The meta object literal for the '<em><b>V2</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INPUT__V2 = eINSTANCE.getInput_V2();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.OutputImpl <em>Output</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.OutputImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getOutput()
     * @generated
     */
    EClass OUTPUT = eINSTANCE.getOutput();

    /**
     * The meta object literal for the '<em><b>V</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OUTPUT__V = eINSTANCE.getOutput_V();

    /**
     * The meta object literal for the '<em><b>V2</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OUTPUT__V2 = eINSTANCE.getOutput_V2();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.CommandsImpl <em>Commands</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.CommandsImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getCommands()
     * @generated
     */
    EClass COMMANDS = eINSTANCE.getCommands();

    /**
     * The meta object literal for the '<em><b>C</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMANDS__C = eINSTANCE.getCommands_C();

    /**
     * The meta object literal for the '<em><b>C2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMANDS__C2 = eINSTANCE.getCommands_C2();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.CommandImpl <em>Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.CommandImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getCommand()
     * @generated
     */
    EClass COMMAND = eINSTANCE.getCommand();

    /**
     * The meta object literal for the '<em><b>Nop</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMMAND__NOP = eINSTANCE.getCommand_Nop();

    /**
     * The meta object literal for the '<em><b>Assign</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMAND__ASSIGN = eINSTANCE.getCommand_Assign();

    /**
     * The meta object literal for the '<em><b>While</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMAND__WHILE = eINSTANCE.getCommand_While();

    /**
     * The meta object literal for the '<em><b>For</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMAND__FOR = eINSTANCE.getCommand_For();

    /**
     * The meta object literal for the '<em><b>If</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMAND__IF = eINSTANCE.getCommand_If();

    /**
     * The meta object literal for the '<em><b>Foreach</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMAND__FOREACH = eINSTANCE.getCommand_Foreach();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.AssignImpl <em>Assign</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.AssignImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getAssign()
     * @generated
     */
    EClass ASSIGN = eINSTANCE.getAssign();

    /**
     * The meta object literal for the '<em><b>V</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGN__V = eINSTANCE.getAssign_V();

    /**
     * The meta object literal for the '<em><b>E</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGN__E = eINSTANCE.getAssign_E();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.WhileImpl <em>While</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.WhileImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getWhile()
     * @generated
     */
    EClass WHILE = eINSTANCE.getWhile();

    /**
     * The meta object literal for the '<em><b>E</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE__E = eINSTANCE.getWhile_E();

    /**
     * The meta object literal for the '<em><b>C</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE__C = eINSTANCE.getWhile_C();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.ForImpl <em>For</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.ForImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getFor()
     * @generated
     */
    EClass FOR = eINSTANCE.getFor();

    /**
     * The meta object literal for the '<em><b>E</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR__E = eINSTANCE.getFor_E();

    /**
     * The meta object literal for the '<em><b>C</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR__C = eINSTANCE.getFor_C();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.IfImpl <em>If</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.IfImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getIf()
     * @generated
     */
    EClass IF = eINSTANCE.getIf();

    /**
     * The meta object literal for the '<em><b>E</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF__E = eINSTANCE.getIf_E();

    /**
     * The meta object literal for the '<em><b>C</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF__C = eINSTANCE.getIf_C();

    /**
     * The meta object literal for the '<em><b>C2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF__C2 = eINSTANCE.getIf_C2();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.ForeachImpl <em>Foreach</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.ForeachImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getForeach()
     * @generated
     */
    EClass FOREACH = eINSTANCE.getForeach();

    /**
     * The meta object literal for the '<em><b>E</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOREACH__E = eINSTANCE.getForeach_E();

    /**
     * The meta object literal for the '<em><b>E2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOREACH__E2 = eINSTANCE.getForeach_E2();

    /**
     * The meta object literal for the '<em><b>C</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOREACH__C = eINSTANCE.getForeach_C();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.VarsImpl <em>Vars</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.VarsImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getVars()
     * @generated
     */
    EClass VARS = eINSTANCE.getVars();

    /**
     * The meta object literal for the '<em><b>V</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARS__V = eINSTANCE.getVars_V();

    /**
     * The meta object literal for the '<em><b>V2</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARS__V2 = eINSTANCE.getVars_V2();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.ExprsImpl <em>Exprs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.ExprsImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExprs()
     * @generated
     */
    EClass EXPRS = eINSTANCE.getExprs();

    /**
     * The meta object literal for the '<em><b>E</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRS__E = eINSTANCE.getExprs_E();

    /**
     * The meta object literal for the '<em><b>E2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRS__E2 = eINSTANCE.getExprs_E2();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.ExprImpl <em>Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.ExprImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExpr()
     * @generated
     */
    EClass EXPR = eINSTANCE.getExpr();

    /**
     * The meta object literal for the '<em><b>Ea</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__EA = eINSTANCE.getExpr_Ea();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.ExprSimpleImpl <em>Expr Simple</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.ExprSimpleImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExprSimple()
     * @generated
     */
    EClass EXPR_SIMPLE = eINSTANCE.getExprSimple();

    /**
     * The meta object literal for the '<em><b>Nil</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPR_SIMPLE__NIL = eINSTANCE.getExprSimple_Nil();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPR_SIMPLE__VAR = eINSTANCE.getExprSimple_Var();

    /**
     * The meta object literal for the '<em><b>Sym</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPR_SIMPLE__SYM = eINSTANCE.getExprSimple_Sym();

    /**
     * The meta object literal for the '<em><b>E3</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_SIMPLE__E3 = eINSTANCE.getExprSimple_E3();

    /**
     * The meta object literal for the '<em><b>E4</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_SIMPLE__E4 = eINSTANCE.getExprSimple_E4();

    /**
     * The meta object literal for the '<em><b>E5</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_SIMPLE__E5 = eINSTANCE.getExprSimple_E5();

    /**
     * The meta object literal for the '<em><b>E6</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_SIMPLE__E6 = eINSTANCE.getExprSimple_E6();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.ExprAndImpl <em>Expr And</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.ExprAndImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExprAnd()
     * @generated
     */
    EClass EXPR_AND = eINSTANCE.getExprAnd();

    /**
     * The meta object literal for the '<em><b>Eo</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_AND__EO = eINSTANCE.getExprAnd_Eo();

    /**
     * The meta object literal for the '<em><b>Eo2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_AND__EO2 = eINSTANCE.getExprAnd_Eo2();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.ExprOrImpl <em>Expr Or</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.ExprOrImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExprOr()
     * @generated
     */
    EClass EXPR_OR = eINSTANCE.getExprOr();

    /**
     * The meta object literal for the '<em><b>En</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_OR__EN = eINSTANCE.getExprOr_En();

    /**
     * The meta object literal for the '<em><b>En2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_OR__EN2 = eINSTANCE.getExprOr_En2();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.ExprNotImpl <em>Expr Not</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.ExprNotImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExprNot()
     * @generated
     */
    EClass EXPR_NOT = eINSTANCE.getExprNot();

    /**
     * The meta object literal for the '<em><b>E</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_NOT__E = eINSTANCE.getExprNot_E();

    /**
     * The meta object literal for the '<em><b>E2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_NOT__E2 = eINSTANCE.getExprNot_E2();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.ExprEqImpl <em>Expr Eq</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.ExprEqImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getExprEq()
     * @generated
     */
    EClass EXPR_EQ = eINSTANCE.getExprEq();

    /**
     * The meta object literal for the '<em><b>E</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_EQ__E = eINSTANCE.getExprEq_E();

    /**
     * The meta object literal for the '<em><b>E2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_EQ__E2 = eINSTANCE.getExprEq_E2();

    /**
     * The meta object literal for the '{@link org.xtext.whileLanguage.impl.LExprImpl <em>LExpr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.whileLanguage.impl.LExprImpl
     * @see org.xtext.whileLanguage.impl.WhileLanguagePackageImpl#getLExpr()
     * @generated
     */
    EClass LEXPR = eINSTANCE.getLExpr();

    /**
     * The meta object literal for the '<em><b>E1</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEXPR__E1 = eINSTANCE.getLExpr_E1();

  }

} //WhileLanguagePackage
